name: ðŸš§ Deploy to staging
on: [push, pull_request]

env:
  GODOT_VERSION: '3.4.4'

jobs:
  # Hacky workaround to use variables in container image
  # https://github.community/t/how-to-use-env-with-container-image/17252/25
  set-env:
    name: Set environment
    runs-on: ubuntu-20.04
    outputs:
      godot-version: ${{ steps.set-gd-ver.outputs.godot-version }}
    steps:
      - id: set-gd-ver
        run: echo "::set-output name=godot-version::${{ env.GODOT_VERSION }}"
  
  deploy:
    name: Deploy
    needs: set-env
    runs-on: ubuntu-20.04

    container:
      image: barichello/godot-ci:${{ needs.set-env.outputs.godot-version }}

    steps:
      - uses: actions/checkout@v2
      
      - uses: actions/setup-python@v3

      - name: Setup export templates
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable

      - name: Export
        run: |
          python export.py web

      - name: Deploy to Netlify
        uses: jsmrcaga/action-netlify-deploy@v1.7.2
        with:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_DEPLOY_MESSAGE: ${{ github.ref }}
          build_directory: 'bin/web'
          # Workaround to avoid npm build triggers
          build_command: 'echo'
          install_command: 'echo'
